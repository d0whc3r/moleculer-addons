diff --git a/node_modules/telegraf/typings/context.d.ts b/node_modules/telegraf/typings/context.d.ts
index ea0115a..950012a 100644
--- a/node_modules/telegraf/typings/context.d.ts
+++ b/node_modules/telegraf/typings/context.d.ts
@@ -3,7 +3,7 @@ import * as tt from './telegram-types';
 import { Deunionize, PropOr, UnionKeys } from './deunionize';
 import ApiClient from './core/network/client';
 import Telegram from './telegram';
-declare type Tail<T> = T extends [unknown, ...infer U] ? U : never;
+declare type Tail<T> = T extends [unknown, ...(infer U)[]] ? U : never;
 declare type Shorthand<FName extends Exclude<keyof Telegram, keyof ApiClient>> = Tail<Parameters<Telegram[FName]>>;
 export declare class Context<U extends Deunionize<tg.Update> = tg.Update> {
     readonly update: U;
@@ -41,23 +41,23 @@ export declare class Context<U extends Deunionize<tg.Update> = tg.Update> {
     /**
      * @see https://core.telegram.org/bots/api#answerinlinequery
      */
-    answerInlineQuery(this: Context, ...args: Shorthand<'answerInlineQuery'>): Promise<true>;
+    answerInlineQuery(this: Context, ...args: Shorthand<'answerInlineQuery'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#answercallbackquery
      */
-    answerCbQuery(this: Context, ...args: Shorthand<'answerCbQuery'>): Promise<true>;
+    answerCbQuery(this: Context, ...args: Shorthand<'answerCbQuery'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#answercallbackquery
      */
-    answerGameQuery(this: Context, ...args: Shorthand<'answerGameQuery'>): Promise<true>;
+    answerGameQuery(this: Context, ...args: Shorthand<'answerGameQuery'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#answershippingquery
      */
-    answerShippingQuery(this: Context, ...args: Shorthand<'answerShippingQuery'>): Promise<true>;
+    answerShippingQuery(this: Context, ...args: Shorthand<'answerShippingQuery'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#answerprecheckoutquery
      */
-    answerPreCheckoutQuery(this: Context, ...args: Shorthand<'answerPreCheckoutQuery'>): Promise<true>;
+    answerPreCheckoutQuery(this: Context, ...args: Shorthand<'answerPreCheckoutQuery'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#editmessagetext
      */
@@ -85,95 +85,95 @@ export declare class Context<U extends Deunionize<tg.Update> = tg.Update> {
     /**
      * @see https://core.telegram.org/bots/api#sendmessage
      */
-    reply(this: Context, ...args: Shorthand<'sendMessage'>): Promise<tg.Message.TextMessage>;
+    reply(this: Context, ...args: Shorthand<'sendMessage'>[]): Promise<tg.Message.TextMessage>;
     /**
      * @see https://core.telegram.org/bots/api#getchat
      */
-    getChat(this: Context, ...args: Shorthand<'getChat'>): Promise<tg.ChatFromGetChat>;
+    getChat(this: Context, ...args: Shorthand<'getChat'>[]): Promise<tg.ChatFromGetChat>;
     /**
      * @see https://core.telegram.org/bots/api#exportchatinvitelink
      */
-    exportChatInviteLink(this: Context, ...args: Shorthand<'exportChatInviteLink'>): Promise<string>;
+    exportChatInviteLink(this: Context, ...args: Shorthand<'exportChatInviteLink'>[]): Promise<string>;
     /**
      * @see https://core.telegram.org/bots/api#createchatinvitelink
      */
-    createChatInviteLink(this: Context, ...args: Shorthand<'createChatInviteLink'>): Promise<tg.ChatInviteLink>;
+    createChatInviteLink(this: Context, ...args: Shorthand<'createChatInviteLink'>[]): Promise<tg.ChatInviteLink>;
     /**
      * @see https://core.telegram.org/bots/api#editchatinvitelink
      */
-    editChatInviteLink(this: Context, ...args: Shorthand<'editChatInviteLink'>): Promise<tg.ChatInviteLink>;
+    editChatInviteLink(this: Context, ...args: Shorthand<'editChatInviteLink'>[]): Promise<tg.ChatInviteLink>;
     /**
      * @see https://core.telegram.org/bots/api#revokechatinvitelink
      */
-    revokeChatInviteLink(this: Context, ...args: Shorthand<'revokeChatInviteLink'>): Promise<tg.ChatInviteLink>;
+    revokeChatInviteLink(this: Context, ...args: Shorthand<'revokeChatInviteLink'>[]): Promise<tg.ChatInviteLink>;
     /**
      * @see https://core.telegram.org/bots/api#banchatmember
      */
-    kickChatMember(this: Context, ...args: Shorthand<'kickChatMember'>): Promise<true>;
+    kickChatMember(this: Context, ...args: Shorthand<'kickChatMember'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#unbanchatmember
      */
-    unbanChatMember(this: Context, ...args: Shorthand<'unbanChatMember'>): Promise<true>;
+    unbanChatMember(this: Context, ...args: Shorthand<'unbanChatMember'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#restrictchatmember
      */
-    restrictChatMember(this: Context, ...args: Shorthand<'restrictChatMember'>): Promise<true>;
+    restrictChatMember(this: Context, ...args: Shorthand<'restrictChatMember'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#promotechatmember
      */
-    promoteChatMember(this: Context, ...args: Shorthand<'promoteChatMember'>): Promise<true>;
+    promoteChatMember(this: Context, ...args: Shorthand<'promoteChatMember'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#setchatadministratorcustomtitle
      */
-    setChatAdministratorCustomTitle(this: Context, ...args: Shorthand<'setChatAdministratorCustomTitle'>): Promise<true>;
+    setChatAdministratorCustomTitle(this: Context, ...args: Shorthand<'setChatAdministratorCustomTitle'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#setchatphoto
      */
-    setChatPhoto(this: Context, ...args: Shorthand<'setChatPhoto'>): Promise<true>;
+    setChatPhoto(this: Context, ...args: Shorthand<'setChatPhoto'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#deletechatphoto
      */
-    deleteChatPhoto(this: Context, ...args: Shorthand<'deleteChatPhoto'>): Promise<true>;
+    deleteChatPhoto(this: Context, ...args: Shorthand<'deleteChatPhoto'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#setchattitle
      */
-    setChatTitle(this: Context, ...args: Shorthand<'setChatTitle'>): Promise<true>;
+    setChatTitle(this: Context, ...args: Shorthand<'setChatTitle'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#setchatdescription
      */
-    setChatDescription(this: Context, ...args: Shorthand<'setChatDescription'>): Promise<true>;
+    setChatDescription(this: Context, ...args: Shorthand<'setChatDescription'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#pinchatmessage
      */
-    pinChatMessage(this: Context, ...args: Shorthand<'pinChatMessage'>): Promise<true>;
+    pinChatMessage(this: Context, ...args: Shorthand<'pinChatMessage'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#unpinchatmessage
      */
-    unpinChatMessage(this: Context, ...args: Shorthand<'unpinChatMessage'>): Promise<true>;
+    unpinChatMessage(this: Context, ...args: Shorthand<'unpinChatMessage'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#unpinallchatmessages
      */
-    unpinAllChatMessages(this: Context, ...args: Shorthand<'unpinAllChatMessages'>): Promise<true>;
+    unpinAllChatMessages(this: Context, ...args: Shorthand<'unpinAllChatMessages'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#leavechat
      */
-    leaveChat(this: Context, ...args: Shorthand<'leaveChat'>): Promise<true>;
+    leaveChat(this: Context, ...args: Shorthand<'leaveChat'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#setchatpermissions
      */
-    setChatPermissions(this: Context, ...args: Shorthand<'setChatPermissions'>): Promise<true>;
+    setChatPermissions(this: Context, ...args: Shorthand<'setChatPermissions'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#getchatadministrators
      */
-    getChatAdministrators(this: Context, ...args: Shorthand<'getChatAdministrators'>): Promise<tg.ChatMember[]>;
+    getChatAdministrators(this: Context, ...args: Shorthand<'getChatAdministrators'>[]): Promise<tg.ChatMember[]>;
     /**
      * @see https://core.telegram.org/bots/api#getchatmember
      */
-    getChatMember(this: Context, ...args: Shorthand<'getChatMember'>): Promise<tg.ChatMember>;
+    getChatMember(this: Context, ...args: Shorthand<'getChatMember'>[]): Promise<tg.ChatMember>;
     /**
      * @see https://core.telegram.org/bots/api#getchatmembercount
      */
-    getChatMembersCount(this: Context, ...args: Shorthand<'getChatMembersCount'>): Promise<number>;
+    getChatMembersCount(this: Context, ...args: Shorthand<'getChatMembersCount'>[]): Promise<number>;
     /**
      * @see https://core.telegram.org/bots/api#setpassportdataerrors
      */
@@ -181,79 +181,79 @@ export declare class Context<U extends Deunionize<tg.Update> = tg.Update> {
     /**
      * @see https://core.telegram.org/bots/api#replywithphoto
      */
-    replyWithPhoto(this: Context, ...args: Shorthand<'sendPhoto'>): Promise<tg.Message.PhotoMessage>;
+    replyWithPhoto(this: Context, ...args: Shorthand<'sendPhoto'>[]): Promise<tg.Message.PhotoMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithmediagroup
      */
-    replyWithMediaGroup(this: Context, ...args: Shorthand<'sendMediaGroup'>): Promise<(tg.Message.DocumentMessage | tg.Message.AudioMessage | tg.Message.PhotoMessage | tg.Message.VideoMessage)[]>;
+    replyWithMediaGroup(this: Context, ...args: Shorthand<'sendMediaGroup'>[]): Promise<(tg.Message.DocumentMessage | tg.Message.AudioMessage | tg.Message.PhotoMessage | tg.Message.VideoMessage)[]>;
     /**
      * @see https://core.telegram.org/bots/api#replywithaudio
      */
-    replyWithAudio(this: Context, ...args: Shorthand<'sendAudio'>): Promise<tg.Message.AudioMessage>;
+    replyWithAudio(this: Context, ...args: Shorthand<'sendAudio'>[]): Promise<tg.Message.AudioMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithdice
      */
-    replyWithDice(this: Context, ...args: Shorthand<'sendDice'>): Promise<tg.Message.DiceMessage>;
+    replyWithDice(this: Context, ...args: Shorthand<'sendDice'>[]): Promise<tg.Message.DiceMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithdocument
      */
-    replyWithDocument(this: Context, ...args: Shorthand<'sendDocument'>): Promise<tg.Message.DocumentMessage>;
+    replyWithDocument(this: Context, ...args: Shorthand<'sendDocument'>[]): Promise<tg.Message.DocumentMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithsticker
      */
-    replyWithSticker(this: Context, ...args: Shorthand<'sendSticker'>): Promise<tg.Message.StickerMessage>;
+    replyWithSticker(this: Context, ...args: Shorthand<'sendSticker'>[]): Promise<tg.Message.StickerMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithvideo
      */
-    replyWithVideo(this: Context, ...args: Shorthand<'sendVideo'>): Promise<tg.Message.VideoMessage>;
+    replyWithVideo(this: Context, ...args: Shorthand<'sendVideo'>[]): Promise<tg.Message.VideoMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithanimation
      */
-    replyWithAnimation(this: Context, ...args: Shorthand<'sendAnimation'>): Promise<tg.Message.AnimationMessage>;
+    replyWithAnimation(this: Context, ...args: Shorthand<'sendAnimation'>[]): Promise<tg.Message.AnimationMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithvideonote
      */
-    replyWithVideoNote(this: Context, ...args: Shorthand<'sendVideoNote'>): Promise<tg.Message.VideoNoteMessage>;
+    replyWithVideoNote(this: Context, ...args: Shorthand<'sendVideoNote'>[]): Promise<tg.Message.VideoNoteMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithinvoice
      */
-    replyWithInvoice(this: Context, ...args: Shorthand<'sendInvoice'>): Promise<tg.Message.InvoiceMessage>;
+    replyWithInvoice(this: Context, ...args: Shorthand<'sendInvoice'>[]): Promise<tg.Message.InvoiceMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithgame
      */
-    replyWithGame(this: Context, ...args: Shorthand<'sendGame'>): Promise<tg.Message.GameMessage>;
+    replyWithGame(this: Context, ...args: Shorthand<'sendGame'>[]): Promise<tg.Message.GameMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithvoice
      */
-    replyWithVoice(this: Context, ...args: Shorthand<'sendVoice'>): Promise<tg.Message.VoiceMessage>;
+    replyWithVoice(this: Context, ...args: Shorthand<'sendVoice'>[]): Promise<tg.Message.VoiceMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithpoll
      */
-    replyWithPoll(this: Context, ...args: Shorthand<'sendPoll'>): Promise<tg.Message.PollMessage>;
+    replyWithPoll(this: Context, ...args: Shorthand<'sendPoll'>[]): Promise<tg.Message.PollMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithquiz
      */
-    replyWithQuiz(this: Context, ...args: Shorthand<'sendQuiz'>): Promise<tg.Message.PollMessage>;
+    replyWithQuiz(this: Context, ...args: Shorthand<'sendQuiz'>[]): Promise<tg.Message.PollMessage>;
     /**
      * @see https://core.telegram.org/bots/api#stoppoll
      */
-    stopPoll(this: Context, ...args: Shorthand<'stopPoll'>): Promise<tg.Poll>;
+    stopPoll(this: Context, ...args: Shorthand<'stopPoll'>[]): Promise<tg.Poll>;
     /**
      * @see https://core.telegram.org/bots/api#replywithchataction
      */
-    replyWithChatAction(this: Context, ...args: Shorthand<'sendChatAction'>): Promise<true>;
+    replyWithChatAction(this: Context, ...args: Shorthand<'sendChatAction'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#replywithlocation
      */
-    replyWithLocation(this: Context, ...args: Shorthand<'sendLocation'>): Promise<tg.Message.LocationMessage>;
+    replyWithLocation(this: Context, ...args: Shorthand<'sendLocation'>[]): Promise<tg.Message.LocationMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithvenue
      */
-    replyWithVenue(this: Context, ...args: Shorthand<'sendVenue'>): Promise<tg.Message.VenueMessage>;
+    replyWithVenue(this: Context, ...args: Shorthand<'sendVenue'>[]): Promise<tg.Message.VenueMessage>;
     /**
      * @see https://core.telegram.org/bots/api#replywithcontact
      */
-    replyWithContact(this: Context, ...args: Shorthand<'sendContact'>): Promise<tg.Message.ContactMessage>;
+    replyWithContact(this: Context, ...args: Shorthand<'sendContact'>[]): Promise<tg.Message.ContactMessage>;
     /**
      * @deprecated use {@link Telegram.getStickerSet}
      * @see https://core.telegram.org/bots/api#getstickerset
@@ -276,7 +276,7 @@ export declare class Context<U extends Deunionize<tg.Update> = tg.Update> {
      * @deprecated use {@link Telegram.setStickerSetThumb}
      * @see https://core.telegram.org/bots/api#setstickersetthumb
      */
-    setStickerSetThumb(this: Context, ...args: Parameters<Telegram['setStickerSetThumb']>): Promise<true>;
+    setStickerSetThumb(this: Context, ...args: Parameters<Telegram['setStickerSetThumb']>[]): Promise<true>;
     /**
      * @deprecated use {@link Telegram.deleteStickerFromSet}
      * @see https://core.telegram.org/bots/api#deletestickerfromset
@@ -285,15 +285,15 @@ export declare class Context<U extends Deunionize<tg.Update> = tg.Update> {
     /**
      * @see https://core.telegram.org/bots/api#uploadstickerfile
      */
-    uploadStickerFile(this: Context, ...args: Shorthand<'uploadStickerFile'>): Promise<tg.File>;
+    uploadStickerFile(this: Context, ...args: Shorthand<'uploadStickerFile'>[]): Promise<tg.File>;
     /**
      * @see https://core.telegram.org/bots/api#createnewstickerset
      */
-    createNewStickerSet(this: Context, ...args: Shorthand<'createNewStickerSet'>): Promise<true>;
+    createNewStickerSet(this: Context, ...args: Shorthand<'createNewStickerSet'>[]): Promise<true>;
     /**
      * @see https://core.telegram.org/bots/api#addstickertoset
      */
-    addStickerToSet(this: Context, ...args: Shorthand<'addStickerToSet'>): Promise<true>;
+    addStickerToSet(this: Context, ...args: Shorthand<'addStickerToSet'>[]): Promise<true>;
     /**
      * @deprecated use {@link Telegram.getMyCommands}
      * @see https://core.telegram.org/bots/api#getmycommands
